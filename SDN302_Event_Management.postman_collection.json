{
	"info": {
		"_postman_id": "sdn302-event-management",
		"name": "SDN302 Event Management",
		"description": "Test collection for SDN302 Event Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Authentication Tests",
			"item": [
				{
					"name": "Login as Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin123\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["auth", "login"]
						},
						"description": "Login with admin account to get JWT token"
					}
				},
				{
					"name": "Login as Student 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"student01\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["auth", "login"]
						},
						"description": "Login with student01 account to get JWT token"
					}
				},
				{
					"name": "Login as Student 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"student02\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["auth", "login"]
						},
						"description": "Login with student02 account to get JWT token"
					}
				}
			]
		},
		{
			"name": "2. Student Operations",
			"item": [
				{
					"name": "Register for AI & Blockchain Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{studentToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": \"67c917290357ade5694b4043\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/registrations",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations"]
						},
						"description": "Register for AI & Blockchain event"
					}
				},
				{
					"name": "Register for PCCC Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{studentToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": \"67cc4eaabe3634844b9f55bc\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/registrations",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations"]
						},
						"description": "Register for PCCC event"
					}
				},
				{
					"name": "Unregister from Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{studentToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/registrations/{{registrationId}}",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations", "{{registrationId}}"]
						},
						"description": "Unregister from an event using registration ID"
					}
				}
			]
		},
		{
			"name": "3. Admin Operations",
			"item": [
				{
					"name": "View All Registrations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/registrations?page=1&limit=10",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Admin view all registrations with pagination"
					}
				},
				{
					"name": "Search Registrations by Date",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/registrations/search?startDate=2025-03-01&endDate=2025-03-31",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations", "search"],
							"query": [
								{
									"key": "startDate",
									"value": "2025-03-01"
								},
								{
									"key": "endDate",
									"value": "2025-03-31"
								}
							]
						},
						"description": "Search registrations within a date range"
					}
				}
			]
		},
		{
			"name": "4. Error Test Cases",
			"item": [
				{
					"name": "Login with Invalid Credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin123\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["auth", "login"]
						},
						"description": "Test login with wrong password"
					}
				},
				{
					"name": "Register Without Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": \"67c917290357ade5694b4043\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/registrations",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations"]
						},
						"description": "Test registration without authentication"
					}
				},
				{
					"name": "Admin Access with Student Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{studentToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/registrations",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations"]
						},
						"description": "Test admin endpoint with student token"
					}
				},
				{
					"name": "Search with Invalid Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/registrations/search?startDate=2025-03-31&endDate=2025-03-01",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["registrations", "search"],
							"query": [
								{
									"key": "startDate",
									"value": "2025-03-31"
								},
								{
									"key": "endDate",
									"value": "2025-03-01"
								}
							]
						},
						"description": "Test search with end date before start date"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "studentToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "registrationId",
			"value": "",
			"type": "string"
		}
	]
} 